schemaVersion: 2.2.2
metadata:
  name: nodejs-user18
  displayName: Node.js Runtime
  description: Node.js 18 application
  icon: https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/node-js.svg
  tags:
    - Node.js
    - Express
    - ubi8
  projectType: Node.js
  language: JavaScript
  version: 0.0.2

starterProjects:
  - name: nodejs-starter
    git:
      checkoutFrom:
        revision: main
      remotes:
        origin: 'https://github.com/nodeshift-starters/devfile-sample.git'

components:
  - name: runtime
    container:
      image: registry.redhat.io/ubi9/nodejs-20@sha256:98db77a451a14d6f2fa4f20941ec77952055b784fdab235a4dd382eaf351ce5f
      args: ['tail', '-f', '/dev/null']
      memoryLimit: 4024Mi
      mountSources: true
      env:
        - name: DEBUG_PORT
          value: '5858'
      endpoints:
        - name: https-node
          targetPort: 3000
          protocol: https
        - exposure: none
          name: debug
          targetPort: 5858

commands:
  - id: install-oc
    exec:
      component: runtime
      # You could also do this during container startup if you'd like it automated right away.
      # In that case, add `runOn: containerCreation` under `exec`.
      commandLine: >
        sh -c '
          echo "Creating ~/.local/bin directory..." &&
          mkdir -p ${HOME}/.local/bin &&
          echo "Downloading and installing oc CLI..." &&
          curl -o oc.tar https://downloads-openshift-console.apps.rm1.0a51.p1.openshiftapps.com/amd64/linux/oc.tar &&
          tar -xvf oc.tar &&
          rm -f oc.tar &&
          chmod +x oc &&
          mv oc ${HOME}/.local/bin/oc &&
          echo "oc CLI installed at ${HOME}/.local/bin/oc" &&
          PATH="${HOME}/.local/bin:${PATH}" &&
          oc version || echo "oc installed, but \"oc version\" might fail if not connected."
        '
      workingDir: /tmp
      group:
        kind: build
        isDefault: false

  - id: install
    exec:
      component: runtime
      commandLine: npm install
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true

  - id: run
    exec:
      component: runtime
      commandLine: npm start
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: run
        isDefault: true

  - id: debug
    exec:
      component: runtime
      commandLine: npm run debug
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: debug
        isDefault: true

  - id: test
    exec:
      component: runtime
      commandLine: npm test
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: test
        isDefault: true
#events:
#  postStart:
#    - install-oc
